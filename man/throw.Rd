% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/internals.R, R/throw.R
\name{throw}
\alias{throw}
\title{throw a condition}
\usage{
throw(message_string, system_call = sys.call(-1), ...)

throw(message_string, system_call = sys.call(-1), ...)
}
\arguments{
\item{message_string}{The message to be thrown.}

\item{system_call}{The call to be thrown.}

\item{...}{Arguments to be passed to \code{\link{structure}}.}

\item{message_string}{The message to be thrown.}

\item{system_call}{The call to be thrown.}

\item{...}{Arguments to be passed to
\code{\link[base:structure]{base::structure}}.}
}
\value{
FALSE. But it does not return anything, it stops with a
condition of class c("cleanr", "error", "condition").

The function does never return anything, it stops with a
condition of class c("error", "cleanr", "condition").
}
\description{
throws a condition of class c("cleanr", "error", "condition").

Throws a condition of class c("error", "cleanr", "condition").
}
\details{
We use this condition as an error dedicated to \pkg{cleanr}.

We use this condition as an error dedicated to \pkg{ cleanr.}
}
\examples{
tryCatch(cleanr:::throw("Hello error!"), cleanr = function(e) return(e))
tryCatch(cleanr:::throw("Hello error!"), cleanr = function(e) return(e))
}
\keyword{internal}
